name: Provision AWS infrastructure

on:
  push:

jobs:
  pip:
    name: Initialize workflow
    runs-on: ubuntu-latest
    outputs:
      env: ${{ steps.init.outputs.env }}
      region: ${{ steps.init.outputs.region }}
      build_version: ${{ steps.init.outputs.build_version }}

    steps:
      - name: test pip install
        env:
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-2
        run: |
          pip install awscli
          echo "$AWS_ACCESS_KEY_ID"



#
#  backup-task-definitions:
#    name: Backup currently running task definitions to S3 for future rollbacks
#    runs-on: ubuntu-latest
#    needs: [init, deploy-core-service, deploy-mailing-service, deploy-frontend-service, s3-backend-private]
#    environment: ${{ needs.init.outputs.env }}
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Prepare local backup files
#        run: |
#          mkdir tasks
#          echo '${{needs.deploy-frontend-service.outputs.old}}' > tasks/frontend-task-definition.json
#          echo '${{needs.deploy-mailing-service.outputs.old}}' > tasks/mailing-task-definition.json
#          echo '${{needs.deploy-core-service.outputs.old}}' > tasks/core-task-definition.json
#
#      # todo: Fix S3 file uploads
#      - uses: shallwefootball/s3-upload-action@master
#        name: Upload S3
#        with:
#          aws_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
#          aws_bucket: ${{ needs.s3-backend-private.outputs.bucket }}
#          source_dir: 'tasks'
#          destination_dir: 'tasks/${{ needs.init.outputs.build_version }}'
